Prev = Outs[2]
#Retail Storage
Outs = F_Growth_Total(Cont = Cont, Prev = Prev,Temp = Temp_Packinhouse_Retail,Time = Time_Packinhouse_Retail)
Cont = Outs[1]
Prev = Outs[2]
#Home Storage
Outs = F_Growth_Total(Cont = Cont, Prev = Prev,Temp = Temp_HomeStorage,Time = Time_HomeStorage)
Cont = Outs[1]
Prev = Outs[2]
#Dose Response
Total_Ill= Func_DR_RServing(Cont= Cont, Prev = Prev, Lot_Size =Lot_size , Lot_lb = lbplot, Serving_size = serving_size)
Sens_df$X1[i]<-Total_Ill
}
View(Sens_df)
Lot_size = 45 #acres
lbplot = 38000
serving_size = 270
#Growing Season Length:
Daysmin = 30
Daysmode = 36
Daysmax = 42
Days = F_growing_season_days(min = Daysmin,mode = Daysmode,max = Daysmax ) #Input
#Length of Die off after flood
Days_FEholdingmin = 30
Days_FEholdingmax = 60
Days_FEholding = runif(1,Days_FEholdingmin,Days_FEholdingmax) #input
#Flooding Water Contamination
Cont_FE_min = 3
Cont_FE_max = 4
Prev_FE_min = 0.8
Prev_FE_max = 1
#Rain and Irrigation Splash Inputs
Rain_Days = round(rpert(1, min = 4,mode = 6, max = 7))
Sunny_Days =is_sunny(days =Days, raindays =Rain_Days)
Soil_Trans <- rbetagen(Days, 0.4, 0.8, 0.05, 16.4)
P_Bug_Plant = runif(Days, 0.35, 0.9)
IrW_Sp <- rpert(Days, 0.02, 0.04, 0.06)
P_Irr_Sp <- rbinom(Days, 1, IrW_Sp)
#Harvesting Blade Cont
Cont_Soil<-10^rtruncnorm(1,0,3.67,0.928,1.11) #E.coli CFU/g
Ratio_O157_GE<-10^rtruncnorm(1,-Inf,0,-1.9,0.6)
Soil_HB<-10.22 #g
Total_CFU_Blade<-log10(Cont_Soil*Ratio_O157_GE*Soil_HB/1500) #CFU/g
Tr_blade_lettuce<- 0.0013
harvest_CC_factor<- runif(1,1,2)
#Transport from farm to facility
Trans_ff_Temp<-runif(1,18,22)
Trans_ff_Time<-runif(1,1,2)
#Hand Trimming
Cont_Gloves = -Inf
Tr_Gloves_Lettuce = runif(1,0.03,0.3)
Tr_Lettuce_Gloves = runif(1,0.01,0.03)
#Shredding Trimming
Cont_Shredd = -Inf
Tr_Shredd_Lettuce = runif(1,0.16,0.28)
Tr_Lettuce_Shredd = runif(1,0.0025,0.0053)
#Conveyor Belt
Cont_Belt = -Inf
Tr_Belt_Lettuce = runif(1,0.15,0.22)
Tr_Lettuce_Belt = runif(1,0.000,0.0139)
#Shaker Table
Cont_Shaker = -Inf
Tr_Shaker_Lettuce = runif(1,0.06,0.30)
Tr_Lettuce_Shaker = runif(1,0,0.0038)
#Dewatering Centrifuge
Cont_Centrifuge = -Inf
Tr_Centrifuge_Lettuce = runif(1,0.23,0.31)
Tr_Lettuce_Centrifuge = runif(1,0,0.0159)
#Transportation from packinghouse to retail
Time_Packinhouse_Retail = runif(1,1,52) #hrs
Temp_Packinhouse_Retail = rtriang(1,2,4,8) #°C
#Retail Storage:
Time_Packinhouse_Retail = runif(1,1,96) #hrs
Temp_Packinhouse_Retail = rtriang(1,2,4,8) #°C
#Trasnport Retail to Home
Time_Retail_Home = runif(1,1,2) #hrs
Temp_Retail_Home = 0.5*(Temp_Packinhouse_Retail+rnormTrunc(1,mean = 8.386,sd = 3.831,min = 0,max = 20)) #C
#Home Storage
Temp_HomeStorage = rnormTrunc(n=1,mean=3.45,sd=2.44,min=-5, max = 17.22) #°C
Time_HomeStorage = rweibull(1,1.13,2.84)*24
###Process Steps
#Step 1: Flooding Event, Contamination of soil
Outs<-Initial_Cont_function(Cont_Distribution = "Uniform",
Prev_Distribution = "Uniform",
Params_Cont = c(Cont_FE_min,Cont_FE_max),
Params_Pre = c(Prev_FE_min,Prev_FE_max))
Cont_s = Outs[1]
Prev_s= Outs[2]
#Step 2: Soil Die off
Outs_s<-Infield_dieoff_soil(Cont = Cont_s,Prev = Prev_s,Days =Days_FEholding )
Cont_s = Outs_s[1]
Prev_s= Outs_s[2]
#Step 3: Contamination Event from Soil, rain splash throughout season
Outs =fc_rsp(contamsoil =Cont_s ,
prev =Prev_s,
soiltrans = Soil_Trans,
ec2plant = P_Bug_Plant,
sunny_yn = Sunny_Days)
C_rsp =Outs[1]
Outs =fc_irrsp(contamsoil =Cont_s ,
prev =Prev_s,
soiltrans = Soil_Trans,
ec2plant = P_Bug_Plant,
irrsp_yn = P_Irr_Sp,
sunny_yn = Sunny_Days)
C_irrsp =Outs[1]
Cont = log10(10^C_rsp + 10^C_irrsp)
Prev = Prev_s
#Step 4: In field die off lettuce:
Outs = Infield_dieoff_lettuce(Cont= Cont,Prev = Prev,Days = Days)
Cont = Outs[1]
Prev = Outs[2]
#Step 5: Harvesting
Outs= F_Cross_Cont_Blades_Lettuce(Cont_P =Cont , Prev = Prev,Cont_Env = Total_CFU_Blade, Tr_a = 0, Tr_b= Tr_blade_lettuce, CC_fac = harvest_CC_factor)
Cont = Outs[1]
Prev = Outs[2]
#Step 6: Transport from Farm to Facility
Outs = F_Growth_Total(Cont = Cont, Prev = Prev,Temp = Trans_ff_Temp,Time = Trans_ff_Time)
Cont = Outs[1]
Prev = Outs[2]
#Step 7: Facility Processing
#Hand trimming
Outs = F_Cross_Cont_Hands_Let(Cont_P =Cont,
Prev=Prev,
Cont_Env =Cont_Gloves,
Tr_a = Tr_Gloves_Lettuce,
Tr_b= Tr_Lettuce_Gloves,
CC_fac = harvest_CC_factor)
Cont = Outs[1]
Prev = Outs[2]
#Shredder
Outs = F_Cross_Cont_Shredder_Let(Cont_P =Cont,
Prev=Prev,
Cont_Env =Cont_Shredd,
Tr_a = Tr_Shredd_Lettuce,
Tr_b= Tr_Lettuce_Shredd,
CC_fac = harvest_CC_factor)
Cont = Outs[1]
Prev = Outs[2]
#Conveyor Belt
Outs = F_Cross_Cont_Belt_Let(Cont_P =Cont,
Prev=Prev,
Cont_Env =Cont_Belt,
Tr_a = Tr_Belt_Lettuce,
Tr_b= Tr_Lettuce_Belt,
CC_fac = harvest_CC_factor)
Cont = Outs[1]
Prev = Outs[2]
#Conveyor Shaker
Outs = F_Cross_Cont_Shaker_Let(Cont_P =Cont,
Prev=Prev,
Cont_Env =Cont_Shaker,
Tr_a = Tr_Shaker_Lettuce,
Tr_b= Tr_Lettuce_Shaker,
CC_fac = harvest_CC_factor)
Cont = Outs[1]
Prev = Outs[2]
#Dewatering Centrifuge
Outs =  F_Cross_Cont_Centrifuge_Let(Cont_P =Cont,
Prev=Prev,
Cont_Env =Cont_Centrifuge,
Tr_a = Tr_Centrifuge_Lettuce,
Tr_b= Tr_Lettuce_Centrifuge,
CC_fac = harvest_CC_factor)
Cont = Outs[1]
Prev = Outs[2]
#Step 8:
Outs = F_Growth_Total(Cont = Cont, Prev = Prev,Temp = Temp_Packinhouse_Retail,Time = Time_Packinhouse_Retail)
Cont = Outs[1]
Prev = Outs[2]
#Retail Storage
Outs = F_Growth_Total(Cont = Cont, Prev = Prev,Temp = Temp_Packinhouse_Retail,Time = Time_Packinhouse_Retail)
Cont = Outs[1]
Prev = Outs[2]
#Home Storage
Outs = F_Growth_Total(Cont = Cont, Prev = Prev,Temp = Temp_HomeStorage,Time = Time_HomeStorage)
Cont = Outs[1]
Prev = Outs[2]
get_value_dist<-function(Distribution, params){
if (length(params) ==2){
if (Distribution == "Uniform"){
out = runif(1,params[1], params[2])
} else if (Distribution == "Normal"){
out = rnorm(1,params[1], params[2])
}
}
if (length(params) ==3){
if (Distribution == "Pert"){
out = rpert(1,params[1], params[2], params[3] )
} else if (Distribution == "Pert"){
out = rtriang(1,params[1], params[2], params[3] )
}
}
}
setwd("~/GitHub/CPS-Farm-To-Facility-Cilantro")
Unc_Conts<-read_csv("Data_Cilantro_Outputs/Water_Testing_Analysis_R2.csv")
setwd("~/GitHub/CPS-Farm-To-Facility-Cilantro")
Unc_Conts<-read_csv("Data_Cilantro_Outputs/Water_Testing_Analysis_R2.csv")
library(tidyverse)
Unc_Conts<-read_csv("Data_Cilantro_Outputs/Water_Testing_Analysis_R2.csv")
Unc_Conts %>%
ggplot(aes(x = Conts, y = median, color =N10Lsamples,ymin=q05, ymax=q95, fill = N10Lsamples))+
geom_point(alpha = 0.5)+
geom_line()+
geom_ribbon(alpha= 0.3)+
labs(x = "Contamination Levels Bulk Water: Oocyst/L", y = "Probability of Detection", fill = "No. 10L Samples", color= "No. 10L Samples")
Unc_Conts<-Unc_Conts %>%
select(-...1) %>%
mutate(N10Lsamples= as.factor(N10Lsamples)) %>%
group_by(N10Lsamples, Conts) %>%
summarise(median = median(PDetect), q05 = quantile(PDetect, 0.05), q95 = quantile(PDetect, 0.95))
Unc_Conts %>%
ggplot(aes(x = Conts, y = median, color =N10Lsamples,ymin=q05, ymax=q95, fill = N10Lsamples))+
geom_point(alpha = 0.5)+
geom_line()+
geom_ribbon(alpha= 0.3)+
labs(x = "Contamination Levels Bulk Water: Oocyst/L", y = "Probability of Detection", fill = "No. 10L Samples", color= "No. 10L Samples")
Unc_Conts %>%
filter(Conts <3) %>%
ggplot(aes(x = Conts, y = median, color =N10Lsamples,ymin=q05, ymax=q95, fill = N10Lsamples))+
geom_point(alpha = 0.5)+
geom_line()+
geom_ribbon(alpha= 0.3)+
labs(x = "Contamination Levels Bulk Water: Oocyst/L", y = "Probability of Detection", fill = "No. 10L Samples", color= "No. 10L Samples")+
theme_bw()+
theme(legend.position="top")
ggsave("Contamination vs Method-R2.jpeg", width = 15, height = 10, units = "cm", dpi = 600)
Unc_Conts<-read_csv("Data_Cilantro_Outputs/Product_Testing_Analysis_R2.csv")
Unc_Conts$Conts<- log10(Unc_Conts$Conts)
Unc_Conts %>%
filter(Conts <3) %>%
ggplot(aes(x = Conts, y = median, shape =N10Lsamples, linetype =N10Lsamples, color =N10Lsamples,ymin=q05, ymax=q95, fill = N10Lsamples))+
geom_point(alpha = 0.5)+
geom_line()+
geom_ribbon(alpha= 0.3)+
labs(x = "Contamination Levels Bulk Water: Oocyst/L", y = "Probability of Detection", fill = "No. 10L Samples", color= "No. 10L Samples")+
theme_bw()+
theme(legend.position="top")
Unc_Conts %>%
ggplot(aes(x = Conts, y = median, shape =N10Lsamples, linetype =N10Lsamples, color =N10Lsamples,ymin=q05, ymax=q95, fill = N10Lsamples))+
geom_point(alpha = 0.5)+
geom_line()+
geom_ribbon(alpha= 0.3)+
labs(x = "Contamination Levels Bulk Water: Oocyst/L", y = "Probability of Detection", fill = "No. 10L Samples", color= "No. 10L Samples", shape = "No. 10L Samples", linetype ="No. 10L Samples" )
Unc_Conts<-Unc_Conts %>%
select(-...1) %>%
mutate(N10Lsamples= as.factor(N10Lsamples)) %>%
group_by(N10Lsamples, Conts) %>%
summarise(median = median(PDetect), q05 = quantile(PDetect, 0.05), q95 = quantile(PDetect, 0.95))
Unc_Conts %>%
ggplot(aes(x = Conts, y = median, shape =N10Lsamples, linetype =N10Lsamples, color =N10Lsamples,ymin=q05, ymax=q95, fill = N10Lsamples))+
geom_point(alpha = 0.5)+
geom_line()+
geom_ribbon(alpha= 0.3)+
labs(x = "Contamination Levels Bulk Water: Oocyst/L", y = "Probability of Detection", fill = "No. 10L Samples", color= "No. 10L Samples", shape = "No. 10L Samples", linetype ="No. 10L Samples" )
Unc_Conts<-read_csv("Data_Cilantro_Outputs/Water_Testing_Analysis_R2.csv")
Unc_Conts<-Unc_Conts %>%
select(-...1) %>%
mutate(N10Lsamples= as.factor(N10Lsamples)) %>%
group_by(N10Lsamples, Conts) %>%
summarise(median = median(PDetect), q05 = quantile(PDetect, 0.05), q95 = quantile(PDetect, 0.95))
Unc_Conts %>%
ggplot(aes(x = Conts, y = median, shape =N10Lsamples, linetype =N10Lsamples, color =N10Lsamples,ymin=q05, ymax=q95, fill = N10Lsamples))+
geom_point(alpha = 0.5)+
geom_line()+
geom_ribbon(alpha= 0.3)+
labs(x = "Contamination Levels Bulk Water: Oocyst/L", y = "Probability of Detection", fill = "No. 10L Samples", color= "No. 10L Samples", shape = "No. 10L Samples", linetype ="No. 10L Samples" )
ggsave("Contamination vs Method.jpeg", width = 15, height = 10, units = "cm", dpi = 600)
Unc_Conts<-read_csv("Data_Cilantro_Outputs/Product_Testing_Analysis_R2.csv")
Unc_Conts$Conts<- log10(Unc_Conts$Conts)
Unc_Conts<-Unc_Conts %>%
mutate(log_CFU_g_conts = log10(10^Conts/(454*22000))) %>%
select(-...1) %>%
mutate(N25gsamples= as.factor(N25gsamples)) %>%
group_by(N25gsamples, log_CFU_g_conts) %>%
summarise(median = median(PDetect), q05 = quantile(PDetect, 0.05), q95 = quantile(PDetect, 0.95))
Unc_Conts %>%
ggplot(aes(x = log_CFU_g_conts, y = median, color =N25gsamples, shape =N25gsamples, linetype =N25gsamples, ymin=q05, ymax=q95, fill = N25gsamples))+
geom_point(alpha = 0.5, size = 2.5)+
geom_line()+
geom_ribbon(alpha= 0.3)+
theme_bw()+
theme(legend.position="top")+
labs(x = "Contamination Levels in Field: log (Oocysts/g) ", y = "Probability of Detection: 25g sample(s)", fill = "No. 25 g Samples", color= "No. 25 g Samples", linetype = "No. 25 g Samples", shape = "No. 25 g Samples")
ggsave("Contamination vs Field Contam-R2.jpeg", width = 15, height = 10, units = "cm", dpi = 600)
Unc_Conts %>%
filter(Conts <3) %>%
ggplot(aes(x = Conts, y = median, shape =N10Lsamples, linetype =N10Lsamples, color =N10Lsamples,ymin=q05, ymax=q95, fill = N10Lsamples))+
geom_point(alpha = 0.5)+
geom_line()+
geom_ribbon(alpha= 0.3)+
labs(x = "Contamination Levels Bulk Water: Oocyst/L", y = "Probability of Detection", fill = "No. 10L Samples", color= "No. 10L Samples", shape = "No. 10L Samples", linetype ="No. 10L Samples" )+
theme_bw()+
theme(legend.position="top")
Unc_Conts<-read_csv("Data_Cilantro_Outputs/Water_Testing_Analysis_R2.csv")
Unc_Conts<-Unc_Conts %>%
select(-...1) %>%
mutate(N10Lsamples= as.factor(N10Lsamples)) %>%
group_by(N10Lsamples, Conts) %>%
summarise(median = median(PDetect), q05 = quantile(PDetect, 0.05), q95 = quantile(PDetect, 0.95))
Unc_Conts %>%
filter(Conts <3) %>%
ggplot(aes(x = Conts, y = median, shape =N10Lsamples, linetype =N10Lsamples, color =N10Lsamples,ymin=q05, ymax=q95, fill = N10Lsamples))+
geom_point(alpha = 0.5)+
geom_line()+
geom_ribbon(alpha= 0.3)+
labs(x = "Contamination Levels Bulk Water: Oocyst/L", y = "Probability of Detection", fill = "No. 10L Samples", color= "No. 10L Samples", shape = "No. 10L Samples", linetype ="No. 10L Samples" )+
theme_bw()+
theme(legend.position="top")
ggsave("Contamination vs Method-R2.jpeg", width = 15, height = 10, units = "cm", dpi = 600)
Unc_Conts %>%
filter(Conts <3) %>%
ggplot(aes(x = Conts, y = median, shape =N10Lsamples, linetype =N10Lsamples, color =N10Lsamples,ymin=q05, ymax=q95, fill = N10Lsamples))+
geom_point(alpha = 0.5,size = 2.5)+
geom_line()+
geom_ribbon(alpha= 0.3)+
labs(x = "Contamination Levels Bulk Water: Oocyst/L", y = "Probability of Detection", fill = "No. 10L Samples", color= "No. 10L Samples", shape = "No. 10L Samples", linetype ="No. 10L Samples" )+
theme_bw()+
theme(legend.position="top")
ggsave("Contamination vs Method-R2.jpeg", width = 15, height = 10, units = "cm", dpi = 600)
Unc_Conts<-read_csv("Data_Cilantro_Outputs/Water_Testing_Analysis_R2.csv")
Unc_Conts<-Unc_Conts %>%
select(-...1) %>%
mutate(N10Lsamples= as.factor(N10Lsamples)) %>%
group_by(N10Lsamples, Conts) %>%
summarise(median = median(PDetect), q05 = quantile(PDetect, 0.05), q95 = quantile(PDetect, 0.95))
Unc_Conts %>%
ggplot(aes(x = Conts, y = median, shape =N10Lsamples, linetype =N10Lsamples, color =N10Lsamples,ymin=q05, ymax=q95, fill = N10Lsamples))+
geom_point(alpha = 0.5)+
geom_line()+
geom_ribbon(alpha= 0.3)+
labs(x = "Contamination Levels Bulk Water: Oocyst/L", y = "Probability of Detection: 10L Sample(s)", fill = "No. 10L Samples", color= "No. 10L Samples", shape = "No. 10L Samples", linetype ="No. 10L Samples" )
ggsave("Contamination vs Method- R2.jpeg", width = 15, height = 10, units = "cm", dpi = 600)
library(tidyverse)
Unc_Conts<-read_csv("Data_Cilantro_Outputs/Water_Testing_Analysis_R2.csv")
Unc_Conts<-Unc_Conts %>%
select(-...1) %>%
mutate(N10Lsamples= as.factor(N10Lsamples)) %>%
group_by(N10Lsamples, Conts) %>%
summarise(median = median(PDetect), q05 = quantile(PDetect, 0.05), q95 = quantile(PDetect, 0.95))
Unc_Conts %>%
filter(Conts <3) %>%
ggplot(aes(x = Conts, y = median, shape =N10Lsamples, linetype =N10Lsamples, color =N10Lsamples,ymin=q05, ymax=q95, fill = N10Lsamples))+
geom_point(alpha = 0.5,size = 2.5)+
geom_line()+
geom_ribbon(alpha= 0.3)+
labs(x = "Contamination Levels Bulk Water: Oocyst/L", y = "Probability of Detection: 10L Sample(s)", fill = "No. 10L Samples", color= "No. 10L Samples", shape = "No. 10L Samples", linetype ="No. 10L Samples" )+
theme_bw()+
theme(legend.position="top")
ggsave("Contamination vs Method-R2.jpeg", width = 15, height = 10, units = "cm", dpi = 600)
knitr::opts_chunk$set(echo = TRUE)
BS2$Relative_Efficacy <-as.numeric(BS2$Relative_Efficacy)
BS2 <- read.csv(file = "Baseline2.csv", header = TRUE )
BS2
BS2$Scenarios <- as.factor(BS2$Scenarios)
BS2$Scenarios2 <- as.factor(BS2$Scenarios2)
BS2$Relative_Efficacy <-as.numeric(BS2$Relative_Efficacy)
BS2
Fig2 <- ggplot(BS2, aes(fill=Contamination, x=Scenarios2, y=Relative_Efficacy)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title="Baseline Scenario 2: Irrigation with contaminated water once \n per season (random)", y="Relative Efficacy Enpoint Oocyst", x="Sampling Scenario")
knitr::opts_chunk$set(echo = TRUE)
BS2 <- read.csv(file = "Baseline2.csv", header = TRUE )
BS2
BS2$Scenarios <- as.factor(BS2$Scenarios)
BS2$Scenarios2 <- as.factor(BS2$Scenarios2)
BS2$Relative_Efficacy <-as.numeric(BS2$Relative_Efficacy)
BS2
Fig2 <- ggplot(BS2, aes(fill=Contamination, x=Scenarios2, y=Relative_Efficacy)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title="Baseline Scenario 2: Irrigation with contaminated water once \n per season (random)", y="Relative Efficacy Enpoint Oocyst", x="Sampling Scenario")
library(ggplot2)
BS2 <- read.csv(file = "Baseline2.csv", header = TRUE )
BS2
BS2$Scenarios <- as.factor(BS2$Scenarios)
BS2$Scenarios2 <- as.factor(BS2$Scenarios2)
BS2$Relative_Efficacy <-as.numeric(BS2$Relative_Efficacy)
BS2
Fig2 <- ggplot(BS2, aes(fill=Contamination, x=Scenarios2, y=Relative_Efficacy)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title="Baseline Scenario 2: Irrigation with contaminated water once \n per season (random)", y="Relative Efficacy Enpoint Oocyst", x="Sampling Scenario")
Fig2 +
scale_fill_discrete(name = "Contamination \nScenario")+#(values=c("#FF3366","#99CCFF")) +
theme_bw()+
#theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1))+
coord_flip()
ggsave("Baseline2.jpg", width =7, height = 7, units = "in", dpi = 600)
library(ggplot2)
BS1 <- read.csv(file = "Baseline1.csv", header = TRUE )
BS1
BS1$Scenarios <- as.factor(BS1$Scenarios)
BS1$Scenarios2 <- as.factor(BS1$Scenarios2)
BS1$Relative_Efficacy <-as.numeric(BS1$Relative_Efficacy)
BS1
Fig1 <- ggplot(BS1, aes(fill=Contamination, x=Scenarios2, y=Relative_Efficacy)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title="Baseline Scenario 1:Daily Irrigation with Contaminated Water", y="Relative Efficacy Enpoint Oocyst", x="Sampling Scenario")
Fig1 +
scale_fill_discrete(name = "Contamination \nScenario")+#(values=c("#FF3366","#99CCFF")) +
theme_bw()+
#theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1))+
coord_flip()
Fig1
ggsave("Baseline1.jpg", width =7, height = 7, units = "in", dpi = 600)
BS2 <- read.csv(file = "Baseline2.csv", header = TRUE )
BS2
BS2$Scenarios <- as.factor(BS2$Scenarios)
BS2$Scenarios2 <- as.factor(BS2$Scenarios2)
BS2$Relative_Efficacy <-as.numeric(BS2$Relative_Efficacy)
BS2
Fig2 <- ggplot(BS2, aes(fill=Contamination, x=Scenarios2, y=Relative_Efficacy)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title="Baseline Scenario 2: Irrigation with contaminated water once \n per season (random)", y="Relative Efficacy Enpoint Oocyst", x="Sampling Scenario")
Fig2 +
scale_fill_discrete(name = "Contamination \nScenario")+#(values=c("#FF3366","#99CCFF")) +
theme_bw()+
#theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1))+
coord_flip()
ggsave("Baseline2.jpg", width =7, height = 7, units = "in", dpi = 600)
library(ggplot2)
BS1 <- read.csv(file = "Baseline1.csv", header = TRUE )
BS1
BS1$Scenarios <- as.factor(BS1$Scenarios)
BS1$Scenarios2 <- as.factor(BS1$Scenarios2)
BS1$Relative_Efficacy <-as.numeric(BS1$Relative_Efficacy)
BS1
Fig1 <- ggplot(BS1, aes(fill=Contamination, x=Scenarios2, y=Relative_Efficacy)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title="Baseline Scenario 1:Daily Irrigation with Contaminated Water", y="Relative Efficacy Enpoint Oocyst", x="Sampling Scenario")
Fig1 +
scale_fill_discrete(name = "Contamination \nScenario")+#(values=c("#FF3366","#99CCFF")) +
theme_bw()+
#theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1))+
coord_flip()
ggsave("Baseline1.jpg", width =7, height = 7, units = "in", dpi = 600)
BS2 <- read.csv(file = "Baseline2.csv", header = TRUE )
BS2
BS2$Scenarios <- as.factor(BS2$Scenarios)
BS2$Scenarios2 <- as.factor(BS2$Scenarios2)
BS2$Relative_Efficacy <-as.numeric(BS2$Relative_Efficacy)
BS2
Fig2 <- ggplot(BS2, aes(fill=Contamination, x=Scenarios2, y=Relative_Efficacy)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title="Baseline Scenario 2: Irrigation with contaminated water once \n per season (random)", y="Relative Efficacy Enpoint Oocyst", x="Sampling Scenario")
Fig2 +
scale_fill_discrete(name = "Contamination \nScenario")+#(values=c("#FF3366","#99CCFF")) +
theme_bw()+
#theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1))+
coord_flip()
ggsave("Baseline2.jpg", width =7, height = 7, units = "in", dpi = 600)
library(ggplot2)
BS1 <- read.csv(file = "Baseline1.csv", header = TRUE )
BS1
BS1$Scenarios <- as.factor(BS1$Scenarios)
BS1$Scenarios2 <- as.factor(BS1$Scenarios2)
BS1$Relative_Efficacy <-as.numeric(BS1$Relative_Efficacy)
BS1
Fig1 <- ggplot(BS1, aes(fill=Contamination, x=Scenarios2, y=Relative_Efficacy)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title="Baseline Scenario 1:Daily Irrigation with Contaminated Water", y="Relative Efficacy Enpoint Oocyst", x="Sampling Scenario")
Fig1 +
scale_fill_discrete(name = "Contamination \nScenario")+#(values=c("#FF3366","#99CCFF")) +
theme_bw()+
#theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1))+
coord_flip()
ggsave("Baseline1.jpg", width =7, height = 7, units = "in", dpi = 600)
BS2 <- read.csv(file = "Baseline2.csv", header = TRUE )
BS2
BS2$Scenarios <- as.factor(BS2$Scenarios)
BS2$Scenarios2 <- as.factor(BS2$Scenarios2)
BS2$Relative_Efficacy <-as.numeric(BS2$Relative_Efficacy)
BS2
Fig2 <- ggplot(BS2, aes(fill=Contamination, x=Scenarios2, y=Relative_Efficacy)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title="Baseline Scenario 2: Irrigation with contaminated water once \n per season (random)", y="Relative Efficacy Enpoint Oocyst", x="Sampling Scenario")
Fig2 +
scale_fill_discrete(name = "Contamination \nScenario")+#(values=c("#FF3366","#99CCFF")) +
theme_bw()+
#theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1))+
coord_flip()
ggsave("Baseline2.jpg", width =7, height = 7, units = "in", dpi = 600)
library(ggplot2)
BS1 <- read.csv(file = "Baseline1.csv", header = TRUE )
BS1
BS1$Scenarios <- as.factor(BS1$Scenarios)
BS1$Scenarios2 <- as.factor(BS1$Scenarios2)
BS1$Relative_Efficacy <-as.numeric(BS1$Relative_Efficacy)
BS1
Fig1 <- ggplot(BS1, aes(fill=Contamination, x=Scenarios2, y=Relative_Efficacy)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title="Baseline Scenario 1:Daily Irrigation with Contaminated Water", y="Relative Efficacy Enpoint Oocyst", x="Sampling Scenario")
Fig1 +
scale_fill_discrete(name = "Contamination \nScenario")+#(values=c("#FF3366","#99CCFF")) +
theme_bw()+
#theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1))+
coord_flip()
ggsave("Baseline1.jpg", width =7, height = 7, units = "in", dpi = 600)
BS2 <- read.csv(file = "Baseline2.csv", header = TRUE )
BS2
BS2$Scenarios <- as.factor(BS2$Scenarios)
BS2$Scenarios2 <- as.factor(BS2$Scenarios2)
BS2$Relative_Efficacy <-as.numeric(BS2$Relative_Efficacy)
BS2
Fig2 <- ggplot(BS2, aes(fill=Contamination, x=Scenarios2, y=Relative_Efficacy)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title="Baseline Scenario 2: Irrigation with contaminated water once \n per season (random)", y="Relative Efficacy Enpoint Oocyst", x="Sampling Scenario")
Fig2 +
scale_fill_discrete(name = "Contamination \nScenario")+#(values=c("#FF3366","#99CCFF")) +
theme_bw()+
#theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1))+
coord_flip()
ggsave("Baseline2.jpg", width =7, height = 7, units = "in", dpi = 600)
